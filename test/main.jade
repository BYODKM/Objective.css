mixin body

  body&attributes(attributes).Page
    header.Page__header
      h1.Page__header-title Objective.css Style Guide
      button.Button.Page__expand-button(onclick="expand()") Expand
    block
    footer.Page__footer
      a.Page__footer-link(href="https://github.com/BYODKM/Objective.css/tree/master/test/lib")
        | Back to GitHub
    script(src="prism.js" defer)

mixin test(str)

  section.Test(id = str)
    script.
      include('#{str}');
    .Test__jade
      block

mixin head

  head&attributes(attributes)
    meta(charset="utf-8")
    meta(name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, minimum-scale=1, user-scalable=no")
    title Objective.css Style Guide
    style
      :stylus
        @import "main"
      block
    script
      :uglify-js
        window.include = function(str) {

          var $ = {
            a    : document.createElement('a'),
            code : document.createElement('code'),
            h1   : document.createElement('h1'),
            pre  : document.createElement('pre'),
            scope: document.querySelector('#' + str)
          };

          if (!$.scope) {
            return;
          }

          $.a.className    = 'Test__anchor';
          $.code.className = 'Test__code language-jade';
          $.h1.className   = 'Test__name';
          $.pre.className  = 'Test__pre';

          $.a.setAttribute('href', '#' + str);
          $.a.innerHTML = '.' + str;

          $.pre.appendChild($.code);
          $.scope.insertBefore($.pre, $.scope.firstChild);

          $.h1.appendChild($.a);
          $.scope.insertBefore($.h1, $.scope.firstChild);

          var request = new XMLHttpRequest();
          var path = './lib/' + str + '/code.jade';

          request.open('GET', path, false);
          request.send();

          $code = $.scope.querySelector('code');
          $code.innerHTML = request.responseText;

        };

        window.expand = function() {

          var $nodes = document.querySelectorAll('.Test');

          if (!$nodes.length) {
            return;
          }

          var toggleClass = 'param--expand';

          for (var i = $nodes.length - 1; i >= 0; i += -1) {

            var $node = $nodes[i];
            var classNames = $node.className.split(' ');
            var existingIndex = classNames.indexOf(toggleClass);

            if (existingIndex >= 0) {
              classNames.splice(existingIndex, 1);
            } else {
              classNames.push(toggleClass);
            }

            $node.className = classNames.join(' ');

          };
        };
